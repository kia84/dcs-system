BEGIN;

DROP   TABLE IF     EXISTS prog_ifs;
DROP   TABLE IF     EXISTS subclasses;
DROP   TABLE IF     EXISTS classes;

CREATE TABLE IF NOT EXISTS classes(
	id integer PRIMARY KEY,	-- Hex digit in integer format (0x0e11 -> 3601)
	name varchar(128) NOT NULL CHECK (trim(both from name) NOT LIKE '')
);
CREATE TABLE IF NOT EXISTS subclasses(
	id integer PRIMARY KEY,	-- like a 'serial'
	class_id integer REFERENCES classes(id),
	subclass_id integer,	-- Hex digit in integer format (0x8801 -> 34817)
	name varchar(128) NOT NULL CHECK (trim(both from name) NOT LIKE '')
);
CREATE TABLE IF NOT EXISTS prog_ifs(
	id integer PRIMARY KEY,
	subclass_id integer REFERENCES subclasses(id),
	prog_if_id integer,	-- Hex digit in integer format (0x0e11 -> 3601)
	name varchar(128) NOT NULL CHECK (trim(both from name) NOT LIKE '')
);

INSERT INTO classes(id, name)
	VALUES	(0,	'Unclassified device'),
		(1,	'Mass storage controller'),
		(2,	'Network controller'),
		(3,	'Display controller'),
		(4,	'Multimedia controller'),
		(5,	'Memory controller'),
		(6,	'Bridge'),
		(7,	'Communication controller'),
		(8,	'Generic system peripheral'),
		(9,	'Input device controller'),
		(10,	'Docking station'),
		(11,	'Processor'),
		(12,	'Serial bus controller'),
		(13,	'Wireless controller'),
		(14,	'Intelligent controller'),
		(15,	'Satellite communications controller'),
		(16,	'Encryption controller'),
		(17,	'Signal processing controller'),
		(255,	'Unassigned class');

INSERT INTO subclasses(id, class_id, subclass_id, name)
	VALUES	(1,	0,	0,	'Non-VGA unclassified device'),
		(2,	0,	1,	'VGA compatible unclassified device'),
		(3,	1,	0,	'SCSI storage controller'),
		(4,	1,	1,	'IDE interface'),
		(5,	1,	2,	'Floppy disk controller'),
		(6,	1,	3,	'IPI bus controller'),
		(7,	1,	4,	'RAID bus controller'),
		(8,	1,	5,	'ATA controller'),
		(9,	1,	6,	'SATA controller'),
		(10,	1,	7,	'Serial Attached SCSI controller'),
		(11,	1,	8,	'Non-Volatile memory controller'),
		(12,	1,	128,	'Mass storage controller'),
		(13,	2,	0,	'Ethernet controller'),
		(14,	2,	1,	'Token ring network controller'),
		(15,	2,	2,	'FDDI network controller'),
		(16,	2,	3,	'ATM network controller'),
		(17,	2,	4,	'ISDN controller'),
		(18,	2,	5,	'WorldFip controller'),
		(19,	2,	6,	'PICMG controller'),
		(20,	2,	128,	'Network controller'),
		(21,	3,	0,	'VGA compatible controller'),
		(22,	3,	1,	'XGA compatible controller'),
		(23,	3,	2,	'3D controller'),
		(24,	3,	128,	'Display controller'),
		(25,	4,	0,	'Multimedia video controller'),
		(26,	4,	1,	'Multimedia audio controller'),
		(27,	4,	2,	'Computer telephony device'),
		(28,	4,	3,	'Audio device'),
		(29,	4,	128,	'Multimedia controller'),
		(30,	5,	0,	'RAM memory'),
		(31,	5,	1,	'FLASH memory'),
		(32,	5,	128,	'Memory controller'),
		(33,	6,	0,	'Host bridge'),
		(34,	6,	1,	'ISA bridge'),
		(35,	6,	2,	'EISA bridge'),
		(36,	6,	3,	'MicroChannel bridge'),
		(37,	6,	4,	'PCI bridge'),
		(38,	6,	5,	'PCMCIA bridge'),
		(39,	6,	6,	'NuBus bridge'),
		(40,	6,	7,	'CardBus bridge'),
		(41,	6,	8,	'RACEway bridge'),
		(42,	6,	9,	'Semi-transparent PCI-to-PCI bridge'),
		(43,	6,	10,	'InfiniBand to PCI host bridge'),
		(44,	6,	128,	'Bridge'),
		(45,	7,	0,	'Serial controller'),
		(46,	7,	1,	'Parallel controller'),
		(47,	7,	2,	'Multiport serial controller'),
		(48,	7,	3,	'Modem'),
		(49,	7,	4,	'GPIB controller'),
		(50,	7,	5,	'Smard Card controller'),
		(51,	7,	128,	'Communication controller'),
		(52,	8,	0,	'PIC'),
		(53,	8,	1,	'DMA controller'),
		(54,	8,	2,	'Timer'),
		(55,	8,	3,	'RTC'),
		(56,	8,	4,	'PCI Hot-plug controller'),
		(57,	8,	5,	'SD Host controller'),
		(58,	8,	6,	'IOMMU'),
		(59,	8,	128,	'System peripheral'),
		(60,	9,	0,	'Keyboard controller'),
		(61,	9,	1,	'Digitizer Pen'),
		(62,	9,	2,	'Mouse controller'),
		(63,	9,	3,	'Scanner controller'),
		(64,	9,	4,	'Gameport controller'),
		(65,	9,	128,	'Input device controller'),
		(66,	10,	0,	'Generic Docking Station'),
		(67,	10,	128,	'Docking Station'),
		(68,	11,	0,	'386'),
		(69,	11,	1,	'486'),
		(70,	11,	2,	'Pentium'),
		(71,	11,	16,	'Alpha'),
		(72,	11,	32,	'Power PC'),
		(73,	11,	48,	'MIPS'),
		(74,	11,	64,	'Co-processor'),
		(75,	12,	0,	'FireWire (IEEE 1394)'),
		(76,	12,	1,	'ACCESS Bus'),
		(77,	12,	2,	'SSA'),
		(78,	12,	3,	'USB controller'),
		(79,	12,	4,	'Fibre Channel'),
		(80,	12,	5,	'SMBus'),
		(81,	12,	6,	'InfiniBand'),
		(82,	12,	7,	'IPMI SMIC interface'),
		(83,	12,	8,	'SERCOS interface'),
		(84,	12,	9,	'CANBUS'),
		(85,	13,	0,	'IRDA controller'),
		(86,	13,	1,	'Consumer IR controller'),
		(87,	13,	16,	'RF controller'),
		(88,	13,	17,	'Bluetooth'),
		(89,	13,	18,	'Broadband'),
		(90,	13,	32,	'802.1a controller'),
		(91,	13,	33,	'802.1b controller'),
		(92,	13,	128,	'Wireless controller'),
		(93,	14,	0,	'I2O'),
		(94,	15,	1,	'Satellite TV controller'),
		(95,	15,	2,	'Satellite audio communication controller'),
		(96,	15,	3,	'Satellite voice communication controller'),
		(97,	15,	4,	'Satellite data communication controller'),
		(98,	16,	0,	'Network and computing encryption device'),
		(99,	16,	16,	'Entertainment encryption device'),
		(100,	16,	128,	'Encryption controller'),
		(101,	17,	0,	'DPIO module'),
		(102,	17,	1,	'Performance counters'),
		(103,	17,	16,	'Communication synchronizer'),
		(104,	17,	32,	'Signal processing management'),
		(105,	17,	128,	'Signal processing controller');

INSERT INTO prog_ifs(id, subclass_id, prog_if_id, name)
	VALUES	(1,	8,	32,	'ADMA single stepping'),
		(2,	8,	48,	'ADMA continuous operation'),
		(3,	9,	0,	'Vendor specific'),
		(4,	9,	1,	'AHCI 1.0'),
		(5,	21,	0,	'VGA controller'),
		(6,	21,	1,	'8514 controller'),
		(7,	37,	0,	'Normal decode'),
		(8,	37,	1,	'Subtractive decode'),
		(9,	41,	0,	'Transparent mode'),
		(10,	41,	1,	'Endpoint mode'),
		(11,	42,	64,	'Primary bus towards host CPU'),
		(12,	42,	128,	'Secondary bus towards host CPU'),
		(13,	45,	0,	'8250'),
		(14,	45,	1,	'16450'),
		(15,	45,	2,	'16550'),
		(16,	45,	3,	'16650'),
		(17,	45,	4,	'16750'),
		(18,	45,	5,	'16850'),
		(19,	45,	6,	'16950'),
		(20,	46,	0,	'SPP'),
		(21,	46,	1,	'BiDir'),
		(22,	46,	2,	'ECP'),
		(23,	46,	3,	'IEEE1284'),
		(24,	46,	254,	'IEEE1284 Target'),
		(25,	48,	0,	'Generic'),
		(26,	48,	1,	'Hayes/16450'),
		(27,	48,	2,	'Hayes/16550'),
		(28,	48,	3,	'Hayes/16650'),
		(29,	48,	4,	'Hayes/16750'),
		(30,	52,	0,	'8259'),
		(31,	52,	1,	'ISA PIC'),
		(32,	52,	2,	'EISA PIC'),
		(33,	52,	16,	'IO-APIC'),
		(34,	52,	32,	'IO(X)-APIC'),
		(35,	53,	0,	'8237'),
		(36,	53,	1,	'ISA DMA'),
		(37,	53,	2,	'EISA DMA'),
		(38,	54,	0,	'8254'),
		(39,	54,	1,	'ISA Timer'),
		(40,	54,	2,	'EISA Timers'),
		(41,	55,	0,	'Generic'),
		(42,	55,	1,	'ISA RTC'),
		(43,	64,	0,	'Generic'),
		(44,	64,	16,	'Extended'),
		(45,	75,	0,	'Generic'),
		(46,	75,	16,	'OHCI'),
		(47,	78,	0,	'UHCI'),
		(48,	78,	16,	'OHCI'),
		(49,	78,	32,	'EHCI'),
		(50,	78,	48,	'XHCI'),
		(51,	78,	128,	'Unspecified'),
		(52,	78,	254,	'USB Device');

COMMIT;
